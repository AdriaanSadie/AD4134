#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/mman.h>
#include <sys/socket.h>
#include <netinet/in/h>
#include <arpa/inet.h>
#include <time.h>




int main(int argc, char **argv)
{
  int fd;
  int cmd, val;
  void *leds_gpio, *spi_read, *spi_write;
  char *name = "/dev/mem";


  if (argc < 2) {
    printf("No inputs given. Options: \r\n");
    printf("1 - LEDS \r\n");
    printf("2 - SPI Read \r\n");
    printf("3 - SPI Write \r\n");
    printf("3 - SPI Write \r\n");
    
  }
  else if (argc == 2) {
    
  }
  else if (argc == 3) {
    cmd = atof(argv[1]);
    val = atof(argv[2]);
    
    if((fd = open(name, O_RDWR)) < 0) {
      perror("open");
      return EXIT_FAILURE;
    }
    
    // Map the memory locations of all GPIO blocks:
    leds_gpio = mmap(NULL, sysconf(_SC_PAGESIZE), PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0x41200000);
    spi_read = mmap(NULL, sysconf(_SC_PAGESIZE), PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0x41210000);
    spi_write = mmap(NULL, sysconf(_SC_PAGESIZE), PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0x41220000);
    
    switch cmd
    {
      case 1:
        *((int32_t*)(leds_gpio)) = val;
        break;
        
      case 2:
        
        break;
      
      case 3:
        break;
        
      default:
        // Do nothing
    }
    
    
  }
  else input = 0;

  return EXIT_SUCCESS;
}
